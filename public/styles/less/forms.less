// intent of the 'form' LESS is that all essential form elements for the application are placed here
// individual element styling will be addressed in element name spaced LESS files

// UI elements included in this document
// ----------------------------------------------
// 1) Buttons
//		a) Mixins live in /public/styles/less/imports/forms.less 
// 2) dynamic layout nth child styles for special arrangements 
// 3) styles for custom-select UI
// 4) inputs
// 5) form layouts
// 6) styles to manage <ul> containers
// 7) Pagination ui
// 8) Error alert ui
// ----------------------------------------------



//////// buttons ////////
// ----------------------------------------------

// This will auto concatenate a primary button with a secondary button
// --------------------------------------------------------------------
button, input[type=submit], input[type=button], a.button {
	.primary_button;
	&:nth-child(n+2) {
		.secondary_button;
	}
}

// This will concatenate a row of button all with the primary style
// -----------------------------------------------------------------
.primary_buttons {
	button, input[type=submit], input[type=button], a.button {
		&:nth-child(1n+2) {
			.primary_button;
			line-height: 3em !important
		}
	}
}

// This will concatenate a row of button all with the secondary style
// ------------------------------------------------------------------
.secondary_buttons {
	button, input[type=submit], input[type=button], a.button {
		.secondary_button;
	}
}

// When applied, set nth value for where CANCEL <button> link UI is to appear. 
// --------------------------------------------------------------------------- 
.cancel_buttons {
	button, input[type=submit], input[type=button], a.button {
		&:nth-child(1n+2) {
			.cancel_link;
		}
	}
}

// This will convert a row of buttons to the SMALL style
// -----------------------------------------------------	
.small_buttons {
	button, input[type=submit], input[type=button], a.button {
		.small_button;
	}
}
		



// Special styles to support an <a> button
// ---------------------------------------
a.button {
	font-weight: bold;
	letter-spacing: -0.06em;
	line-height: 3em;
	&.active {
		&:hover {
			.box_shadow(0 0 0, @white);
		}
	}
}

a#disabled {
	.primary_button_disabled;
	border-color: @fox_grey;
	.button_shadow(@shadow_color, @fox_grey);
	&:hover {
		.button_shadow(@shadow_color, @fox_grey);
	}
}

.cancel_buttons {
	a#disabled {
		background: none;
		.box_shadow(0 0 0, @white);
		&:hover {
			.box_shadow(0px 0 0, @white);
			text-decoration: none;
		}
	}
}
	
// Post click active state for buttons
// You need to turn off all the button UI so that the spinner will show
// --------------------------------------------------------------------
button.active, input[type=submit].active, input[type=button].active, a.active {
	
	// show spinner
	// ------------
	.ajax_spinner_lg;
	
	// deactivate all the buttons UI
	// ------------------------------
	color: fadeout(@alpha_grey, 100%);			// makes text transparent
	.box_shadow(fadeout(@white, 100%), 0 0 0);	// makes shadow transparent 
	.text_shadow(0 0 0, fadeout(@white, 100%));	// makes text shadow transparent
	border: 0px;								// removes border	
	
	// keeps the spinner in view with hover
	// ------------------------------------
	&:hover {
		.ajax_spinner_lg;
	}
}
		
.anti_buttons {
	.anti_button;
}


.mini_pagination {
	font-weight: bold;
	line-height: 2.08333333em;
	li {
		float: left;
		margin-right: 0.8333333em;
	}
	.mini_buttons;
}

////// buttons ////////
 
 
 
///////// dynamic layout nth child styles for special arrangements ////////
// ---------------------------------------------------------------------------

// Special use case if you need two primary buttons followed by secondary buttons
// -------------------------------------------------------------------------------
.dual_primary_buttons {
 	button, input[type=submit], input[type=button], a.button {
 		&:nth-child(n+2) {
 			.primary_button;
 		}
 		&:nth-child(n+3) {
 			.secondary_button;
 		}
 	}
 }
 
.dual_primary_cancel_buttons {
 	button, input[type=submit], input[type=button], a.button {
 		&:nth-child(n+2) {
 			.primary_button;
 		}
 		&:nth-child(n+3) {
 			.cancel_link;
 		}
 	}
 }
 
.reverse_primary_buttons {
	button, input[type=submit], input[type=button], a.button {
		&:nth-child(1) {
			.secondary_button;
		}
		&:nth-child(1n+2) {
			.primary_button;
		}
	}
}


.dual_primary_buttons_small {
	button, input[type=submit], input[type=button], a.button {
		.small_button;
		&:nth-child(n+2) {
			.primary_button;
			.small_button;
		}
		&:nth-child(n+3) {
			.secondary_button;
		}
	}
}
			
.reverse_primary_buttons_small {
	button, input[type=submit], input[type=button], a.button {
		.small_button;
		&:nth-child(1) {
			.secondary_button;
		}
		&:nth-child(1n+2) {
			.primary_button;
			.small_button;
		}
	}
}
//////// special case buttons use ////////

//////////// styles for custom-select UI ///////////
// --------------------------------------------------

// To suport a stylized select drop down menu
.custom-select {
	position: relative;
	display: inline-block;
	margin-bottom: 16px;
	width: 100%;
	select  {
		margin: 0 !important;
		font: inherit;
		line-height: 1.2;
		color: @alpha_grey;
		.four_stop_linear_gradient(#E2E2E2, #DBDBDB, #D1D1D1, #DDDDDD);
				
		-webkit-appearance: none;
				
		.border_radius(6px);
		
		&:hover, &:focus {
			border-color: @charlie_grey !important;
		}
	}
		
	&:after {
		content: "\25BC";
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		line-height: 28px;
		padding: 0 7px;
		.four_stop_linear_gradient(#E2E2E2, #DBDBDB, #D1D1D1, #DDDDDD);
		color: @alpha_grey;
		border: 1px solid @charlie_grey;
		border-width: 1px 1px 1px 0;
	
		pointer-events:none;
	
		.border_radius(0 6px 6px 0);
	}
}
	
.no-pointer-events  {
	.custom-select:after {
		content: none;
	}
}

///////// styles for custom-select UI ///////////						


//////// inputs ////////
// ---------------------

input[type=text], input[type=password], select, textarea, a.ui-selectmenu {
	border: 1px solid @form_field_border;
	background: @form_field_background_color;
	.border_radius(5px);
	padding: .4em 0 .4em 0.666667em;
	width: 98%;
	outline: none;
	.field_input_spacing;
	.field_focus;
	.large;
	color: @form_field_text;
}
	
select {
	width: 100%;
}
	
.fail {
	background: @form_field_fail_bkg !important;
	border-color: @form_field_border_fail !important;
	color: @form_field_text_fail !important;
	&:focus {
		background: @form_field_fail_bkg !important;
	}
	select {
		background: @form_field_fail_bkg;
		border-color: @form_field_border_fail;
		&:focus {
			background: @form_field_fail_bkg;
		}
	}
	&:after {
		background: @form_field_fail_bkg;
		border-color: @form_field_border_fail;
	}
}

input[disabled], textarea[disabled], .disabled {
	background-color: @input_disabled_bkg;
	border-color: @input_disabled_border;
	color: @input_disabled_text;
	opacity: .35;
	&:hover {
		border-color: @input_disabled_border;
		.soft_shadow;
	}
}


input[type=submit], input[type=button] {
	opacity: 1.0;
}

textarea {
	height: 16.666667em;
	font-family: Courier;
}
			
input[type=file], dl.horizontal_selectors, dl.vertical_selectors {
	.field_input_spacing;
}



//////// inputs ////////
		

//////// form layouts ////////
// ---------------------------

label {
	display: block;
	.small;
	font-weight: bold;
	line-height: 1em;
	margin-bottom: .5em;
	span {
		color: @delta_grey;
		padding-left: .25em;
		font-weight: normal;
	}
}

form {
	dl {
		+ p {
			margin-bottom: 0;
		}
	}
}
			
///////// styles to manage <ul> containers ///////////
// ---------------------------------------------------

.horizontal_selectors {
	.flexbox(horizontal, start, end, 100%, 100%);
	.field_input_spacing;
	li {
		margin-right: .8333333em;
		padding-right: .8333333em;
	}
	label {
		display: inline-block;
		line-height: 1.5em;
		font-weight: normal;
		font-size: 1em;
		margin: 0px;
	}
}
		
.vertical_selectors {
	.field_input_spacing;
	label {
		display: inline-block;
		font-weight: normal;
		margin-bottom: .6666667em;
		font-size: 1em;
	}
}
		
///////// styles to manage <ul> containers ///////////							



////////////// Pagination ui //////////////
// ---------------------------------------
.pagination {
	.flexbox(horizontal, end, center, 100%, 100%);
	input[type=text] {
		width: 2em;
		margin: 0px 8px !important;
		padding-right: .4em;
		border-color: @echo_grey;
		text-align: center;
	}
	li.pagination_left {
		.flex(1);
	}
	li {
		> ul {
			.flexbox(horizontal, end, center, 100%, 100%);
			margin: 0;
			li {
				line-height: 2.5em;
				width: 2.6666667em;
				height: 2.83333em;
				border: 1px solid @echo_grey;
				.border_radius(5px);
				.echo_color_gradient;
				&:hover, &:active {
					.box_shadow(inset fadeout(@alpha_grey, 80%), 0 0 .8333333em 0);
				}
			}
			li {
				&:nth-child(1) {
					margin: 0 5px 0 6px;
				}
				&:nth-child(2) {
					margin: 0;
				}
			}
			li  {
				a {
					border-color: transparent @bravo_grey transparent transparent;
					border-style: solid;
					border-width: .5em .91666667em .5em 0;
					display: inline-block;
					position: relative;
					top: .41666667em;
					left: .8333333em;
				}
			}
			li  {
				+ li  {
					a {
						border-color: transparent transparent transparent @bravo_grey;
						border-width: .5em 0 .5em .91666667em;
					}
				}
			}
		}
	}
}
		
////////////// Pagination ui //////////////

////////////// Error alert ui //////////////		
// ----------------------------------------

.alert-box {
	background-color: @kilo_color;
	.warning_box;
	.alert_icon {
		.warning_icon_placement;
		&:before {
			.warning_placement_before;
			top: -34px;
		}
	}
}
			
.success-box {
	background-color: @golf_color;
	.warning_box;
	.success_icon {
		.warning_icon_placement;
		&:before {
			.warning_placement_before;
			top: 0px;
		}
	}
}

.error-box {
	background-color: @charlie_color;
	.warning_box;
	.error_icon {
		.warning_icon_placement;
		&:before {
			.warning_placement_before;
			top: -16px;
		}
	}
}
////////////// Error alert ui //////////////
